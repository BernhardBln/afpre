#/bin/bash

#set -x
set -e

### definitions

CFG=~/.afpre

### functions

error_msg() {
	echo $1
	exit 1
}

check_dep() {
	which $1 &> /dev/null || error_msg "executable '$1' no found in your \$PATH"
}

json_value() {
	jq -r ."${2}" <<<"${1}" 
}

encode64() {
	echo -n "${1}" | openssl base64 -base64 
}

basic_auth() {
	curl -f -s -H "Authorization: Basic ${2}" ${1} 
}

check_config_file() {
	[ -f "${CFG}" ] || error_msg "missing config file: ${CFG}"
}

check_config_key() {
	grep -q "^${1}=" ${CFG} || error_msg "configuration key \"${1}\" not found in config file \"${CFG}\""
}

variable_empty() {
	[ -z "${1}" ]
}

### prompt

! read -d '' PROMPT_SCRIPT <<"EOF"
for F in /etc/bash.bashrc ~/.bashrc
do
    [ -f "${F}" ] && . "${F}"
done

minutes_left() {
    (($SECONDS >= $AWS_VALID_SECONDS)) \
	&& echo EXPIRED \
	|| echo $(((${AWS_VALID_SECONDS}-${SECONDS})/60)) Min
}

PS1="(${AWS_ACCOUNT}/${AWS_ROLE} \\$(minutes_left)) $PS1"
EOF

check_dep curl
check_dep jq
check_dep openssl
check_config_file
check_config_key ACCOUNT
check_config_key ROLE
check_config_key _PATH
check_config_key HOST

source $CFG

variable_empty $NAME && {
	echo -n "username: " && read NAME
}

variable_empty $PW && {
	echo -n "password: " && read -s PW
	echo
}

echo "authenticating as ${NAME} for ${ACCOUNT}/${ROLE} against ${HOST}"

CREDS=$(encode64 $NAME:$PW)
JSON=$(basic_auth https://${HOST}${_PATH}/${ACCOUNT}/${ROLE} "${CREDS}") || error_msg "... failed!"

echo "assembling environment"

TMPFILE=$(mktemp)
echo "
export AWS_ACCESS_KEY_ID=$(json_value "${JSON}" AccessKeyId) 
export AWS_SECRET_ACCESS_KEY=$(json_value "${JSON}" SecretAccessKey) 
export AWS_SESSION_TOKEN=$(json_value "${JSON}" Token) 
export AWS_SECURITY_TOKEN=$(json_value "${JSON}" Token)
export AWS_VALID_SECONDS=$(($(date -d $(json_value "${JSON}" Expiration) +%s)-$(date +%s)))
export AWS_ACCOUNT=${ACCOUNT}
export AWS_ROLE=${ROLE}
${PROMPT_SCRIPT}
" > $TMPFILE

echo "** starting bash"

bash --rcfile $TMPFILE
