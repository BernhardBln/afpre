#!/bin/bash

#set -x
set -e

### definitions

CFG=~/.afpre

### functions

error_msg() {
	echo "${1}"
	exit 1
}

check_dep() {
	which "${1}" &> /dev/null || error_msg "executable '$1' no found in your \$PATH"
}

encode64() {
	echo -n "${1}" | openssl base64 -base64
}

check_config_file() {
	[ -f "${CFG}" ] || error_msg "missing config file: ${CFG}"
}

check_config_key() {
	grep -q "^${1}=" ${CFG} || error_msg "configuration key \"${1}\" not found in config file \"${CFG}\""
}

variable_empty() {
	[ -z "${1}" ]
}

check_dep curl
check_dep jq
check_dep openssl
check_config_file
check_config_key ACCOUNT
check_config_key ROLE
check_config_key _PATH
check_config_key HOST

source $CFG

variable_empty "${NAME}" && {
	echo -n "username: " && read NAME
}

variable_empty "${PW}" && {
	echo -n "password: " && read -s PW
	echo
}

X1XBN02R=$(encode64 "${NAME}:${PW}")

! read -r -d '' RC <<EOF
#set -x

for F in /etc/bash.bashrc ~/.bashrc
do
    [ -f "\${F}" ] && . "\${F}"
done

variable_empty() {
        [ -z "\${1}" ]
}

error_msg() {
        echo \$1
        exit 1
}

basic_auth() {
        curl -f -s -H "Authorization: Basic \${2}" \${1}
}

json_value() {
        jq -r ."\${2}" <<<"\${1}"
}

token_renew_interval() {
	echo \${RENEW_INT:-\$((\$AWS_VALID_SECONDS - 100 ))}
}

PROMPT_COMMAND="{
        ((\\\$SECONDS >= \\\$(token_renew_interval) )) && {
                echo token expired - need to renew... 
                echo authenticating as ${NAME} for ${ACCOUNT}/${ROLE} against ${HOST}
                JSON=\\\$(basic_auth https://${HOST}${_PATH}/${ACCOUNT}/${ROLE} ${X1XBN02R}) || error_msg \"... failed!\"
                export AWS_ACCESS_KEY_ID=\\\$(json_value \"\\\${JSON}\" AccessKeyId)
                export AWS_SECRET_ACCESS_KEY=\\\$(json_value \"\\\${JSON}\" SecretAccessKey)
                export AWS_SESSION_TOKEN=\\\$(json_value \"\\\${JSON}\" Token)
                export AWS_SECURITY_TOKEN=\\\$(json_value \"\\\${JSON}\" Token)
                export AWS_VALID_SECONDS=\\\$((\\\$(date -d \\\$(json_value \"\\\${JSON}\" Expiration) +%s)-\\\$(date +%s)))
		SECONDS=0
                echo done.
        }
}"

PS1="AFP| \$PS1"
EOF

echo "starting bash"

RCFILE=$(mktemp)
echo "${RC}" > $RCFILE

AWS_VALID_SECONDS=0 RENEW_INT=$RENEW_INT bash --rcfile $RCFILE
